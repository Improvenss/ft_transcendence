# LINK: https://docs.docker.com/compose/compose-file/compose-versioning/
version: '3.9'

###############################################################################
#                             NETWORKS                                        #
#/////////////////////////////////////////////////////////////////////////////#

networks:
  transcendence_network:
    name: t_network
    driver: bridge

###############################################################################
#                             VOLUMES                                         #
#/////////////////////////////////////////////////////////////////////////////#

#volumes:
  # postgres_data:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     o: bind
  #     device: ./data/postgres
  # pgadmin4_data:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     o: bind
  #     device: ./data/pgadmin4
  # redis_data:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     o: bind
  #     device: ./data/redis
  # backend_data:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     o: bind
  #     device: ./data/backend
  # frontend_data:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     o: bind
  #     device: ./data/frontend

###############################################################################
#                             SERVICES                                        #
#/////////////////////////////////////////////////////////////////////////////#

services:
  # # ___redis_cache__ #
  # redis:
  #   image: redis:7.2.1-alpine3.18
  #   # env_file:
  #   #   - ./srcs/envFiles/redis.env
  #   volumes:
  #     - ./srcs/requirements/redis:/app
  #   networks:
  #     # - bridge
  #     - transcendence_network
  #   restart: unless-stopped
  #   ports:
  #     - 6379:6379 # Local port / Exported port.
  #   depends_on:
  #     - postgres #   # progress: plain
  # # ________________ #
  # ___PostgreSQL___ #
  postgres:
    container_name: postgres
    image: postgres:16.0-alpine3.18
    env_file:
      # - ./srcs/requirements/postgres/.env
      - ./srcs/.env
    # environment:
    #   TZ: "Europe/Istanbul"
    volumes:
      # - postgres_data:/var/lib/postgresql/data
      - ./srcs/requirements/ssl:/etc/ssl/certs
      # - ./srcs/requirements/postgres/create-database.sh:/docker-entrypoint-initdb.d/create-database.sh # PostgreSQL bu 'docker-entypoing-initdb.d' klasorunun icerisindekileri container olusup postgresql calistirildiktan sonra otomatik bir sekilde bu icerisindeki dosyalari calistiriyor.
    networks:
      - transcendence_network
    restart: unless-stopped # Durdurulmadigi surece.
    ports:
      - "5432:5432" # Local port / Exported port. postgres's default port(5432).
  # ________________ #
  # ____pgadmin4____ #
  pgadmin4:
    container_name: pgadmin4
    # image: dpage/pgadmin4:7.8
    image: dpage/pgadmin4:latest
    env_file:
      # - ./srcs/requirements/pgadmin4/.env
      - ./srcs/.env
    # environment:
    #   TZ: "Europe/Istanbul"
    volumes:
      - ./srcs/requirements/ssl:/etc/ssl/certs
      - ./srcs/requirements/pgadmin4/servers.json:/pgadmin4/servers.json
      - ./srcs/requirements/pgadmin4/entrypoint.sh:/entrypoint.sh
      # - pgadmin4_data:/pgadmin4
    networks:
      - transcendence_network
    restart: unless-stopped
    expose:
      - 5050
    ports:
      - "5050:5050" # Local port / Exported port.
    depends_on:
      - postgres
  # ________________ #
  # _____backend____ #
  backend: # Backend's container.
    container_name: backend
    build: ./srcs/requirements/backend/ # Container's 'Dockerfile' path location for run this file.
    env_file:
      - ./srcs/.env
    volumes:
      - ./srcs/requirements/ssl:/etc/ssl/certs
      - ./srcs/requirements/backend:/app
    networks:
      - transcendence_network
    restart: unless-stopped
    expose:
      - 3000
    ports:
      - "3000:3000" # Local port / Exported port. nestjs's default port(3000).
    depends_on:
      #- ssl_container
      - postgres
    # progress: plain
  # ________________ #
  # ____frontend____ #
  frontend: # Frontend's container.
    container_name: frontend
    build: ./srcs/requirements/frontend/ # Container's 'Dockerfile' path location for run this file.
    env_file:
      - ./srcs/.env
    # environment:
    #   - SSL_CRT_FILE=/etc/ssl/certs/ft_transcendence.crt
    #   - SSL_KEY_FILE=/etc/ssl/certs/ft_transcendence.key
    volumes:
      - ./srcs/requirements/ssl:/etc/ssl/certs
      - ./srcs/requirements/frontend:/app
    networks:
      - transcendence_network
    restart: unless-stopped
    expose: #sadece docker ağı içine port açılmış olunur.
      - 3001
    ports:
    # - 80:80 # Local port / Exported port.
      - 3001:3001
    # command: sh -c "HTTPS=true SSL_CRT_FILE=$$SSL_CRT_FILE SSL_KEY_FILE=$$SSL_KEY_FILE npm start"
    depends_on:
      - postgres
      - backend
    # progress: plain
  # ________________ #
  # _____nginx______ #
  nginx:
    container_name: nginx
    # image: nginx:latest
    build: ./srcs/requirements/nginx
    env_file:
      # - ./srcs/requirements/nginx/.env
      - ./srcs/.env
    volumes:
      #- ./srcs/requirements/nginx/default:/etc/nginx/conf.d/default.conf
      - ./srcs/requirements/nginx/default.conf:/etc/nginx/sites-available/default
      - ./srcs/requirements/ssl:/etc/ssl/certs
    networks:
      - transcendence_network
    restart: unless-stopped
    #expose:
    #  - 443
    ports:
      - 443:443
    depends_on:
      - frontend
  # ________________ #