# LINK: https://docs.docker.com/compose/compose-file/compose-versioning/
version: '3.8'

###############################################################################
#                             NETWORKS                                        #
#/////////////////////////////////////////////////////////////////////////////#

networks:
  transcendence_network:
    driver: bridge

###############################################################################
#                             VOLUMES                                         #
#/////////////////////////////////////////////////////////////////////////////#

volumes:
  # node_modules:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/postgres
  # pgadmin4_data:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     o: bind
  #     device: ./data/pgadmin4
  # redis_data:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     o: bind
  #     device: ./data/redis
  # backend_data:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     o: bind
  #     device: ./data/backend
  # frontend_data:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     o: bind
  #     device: ./data/frontend

###############################################################################
#                             SERVICES                                        #
#/////////////////////////////////////////////////////////////////////////////#
services:
  # ___PostgreSQL___ # OK
  postgres:
    image: postgres:16.0-alpine3.18
    env_file:
      - ./srcs/requirements/postgres/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./srcs/requirements/postgres/create-database.sh:/docker-entrypoint-initdb.d/create-database.sh # PostgreSQL bu 'docker-entypoing-initdb.d' klasorunun icerisindekileri container olusup postgresql calistirildiktan sonra otomatik bir sekilde bu icerisindeki dosyalari calistiriyor.
    networks:
      # - bridge
      - transcendence_network
    restart: unless-stopped # Durdurulmadigi surece.
    ports:
      - 5432:5432 # Local port / Exported port. postgres's default port(5432).
    command: ["postgres", "-c", "log_statement=all"] # Bu komut satiri hem 'postgres'i calistirip run-time parametresini 'log_statement=all' olarak belirliyor. Bu da log'larin print edilmesini sagliyor ki development asamasinda isimizi kolaylastiriyor.
    # depends_on:
    # progress: plain
  # ________________ #
  # ____pgadmin4____ # OK
  pgadmin4:
    image: dpage/pgadmin4:7.7
    env_file:
      - ./srcs/requirements/pgadmin4/.env
    volumes:
      - ./srcs/requirements/pgadmin4:/app
    networks:
      # - bridge
      - transcendence_network
    restart: unless-stopped
    ports:
      - 9000:80 # Local port / Exported port.
      # - 9000:9000 # Local port / Exported port.
    depends_on:
      - postgres
    # progress: plain
  # ________________ #
  # # ___redis_cache__ #
  # redis:
  #   image: redis:7.2.1-alpine3.18
  #   # env_file:
  #   #   - ./srcs/envFiles/redis.env
  #   volumes:
  #     - ./srcs/requirements/redis:/app
  #   networks:
  #     # - bridge
  #     - transcendence_network
  #   restart: unless-stopped
  #   ports:
  #     - 6379:6379 # Local port / Exported port.
  #   depends_on:
  #     - postgres
  #   # progress: plain
  # # ________________ #
  # _____backend____ #
  backend: # Backend's container.
    container_name: backend
    build: ./srcs/requirements/backend/ # Container's 'Dockerfile' path location for run this file.
    # env_file:
    #   - ./srcs/envFiles/backend.env
    volumes:
      - ./srcs/requirements/backend:/app
      # - node_modules:/app/nest-js/node_modules
    networks:
      # - bridge
      - transcendence_network
    restart: unless-stopped
    ports:
      - 3000:3000 # Local port / Exported port. nestjs's default port(3000).
    depends_on:
      - postgres
    # progress: plain
  # ________________ #
  # ____frontend____ #
  frontend: # Frontend's container.
    container_name: frontend
    build: ./srcs/requirements/frontend/ # Container's 'Dockerfile' path location for run this file.
    # env_file:
    #   - ./srcs/envFiles/frontend.env
    volumes:
      - ./srcs/requirements/frontend:/app
      # - node_modules:/app/react-app/node_modules
    networks:
      # - bridge
      - transcendence_network
    restart: unless-stopped
    ports:
      # - 80:80 # Local port / Exported port. nestjs's default port(3000).
      - 443:443
    depends_on:
      - backend
    # progress: plain
  # ________________ #